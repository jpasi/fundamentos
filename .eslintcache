[{"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\index.js":"1","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\App.jsx":"2","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\card\\card.jsx":"3","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\card\\Card.jsx":"4","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\BackEnd.jsx":"5","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\components\\RegForma.jsx":"6","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\components\\RegedForma.jsx":"7","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\DB\\models\\keyword.js":"8"},{"size":181,"mtime":1611181156292,"results":"9","hashOfConfig":"10"},{"size":742,"mtime":1611768868516,"results":"11","hashOfConfig":"10"},{"size":272,"mtime":1611169785019,"results":"12","hashOfConfig":"10"},{"size":327,"mtime":1611329037024,"results":"13","hashOfConfig":"10"},{"size":129,"mtime":1611325876836,"results":"14","hashOfConfig":"10"},{"size":2905,"mtime":1611792797606,"results":"15","hashOfConfig":"10"},{"size":1842,"mtime":1611518418030,"results":"16","hashOfConfig":"10"},{"size":530,"mtime":1611772473763,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1qi6wju",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\index.js",[],["38","39"],"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\App.jsx",[],"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\card\\card.jsx",["40"],"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\card\\Card.jsx",[],"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\BackEnd.jsx",[],"E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\components\\RegForma.jsx",["41","42"],"import React, { useState, useEffect } from 'react'\nimport BackEnd from '../BackEnd.jsx'\nconst { Sequelize, DataTypes } = require('sequelize')\n\n// const express = require('express')\n// const app = express()\nconst Keyword = require('../DB/models/keyword')\nconst sequelize = new Sequelize({ dialect: 'sqlite', storage: '../../Keywords.db' })\nconst keywords = Keyword(sequelize, DataTypes)\n\nfunction RegForm({\n  initialValues,\n  validate\n}) {\n  const [errors, setErrors] = useState({})\n  const [values, setValues] = useState(initialValues)\n\n  useEffect(() => {\n    validateValues(values)\n  }, [values])\n\n  function handleChange(e) {\n    const fieldName = e.target.getAttribute('name')\n    const value = e.target.value\n    setValues({\n      ...values,\n      [fieldName]: value,\n    })\n  }\n\n  function validateValues(values) {\n    setErrors(validate(values))\n  }\n\n  // async function postReq() {\n  //   const res = await BackEnd.post('/reqs',{\n  //     keyword: values,\n\n  //   })\n  //   console.log('estas bien vergas!!!')\n  // }\n\n  return {\n    values,\n    errors,\n    setErrors,\n    handleChange,\n    // postReq\n  }\n}\n\nfunction App() {\n  const forma = RegForm({\n    initialValues: {\n      keyword: ''\n    },\n\n    validate: function (values) {\n      const errors = {};\n\n      if(values.keyword.length < 1) {\n        errors.keyword = 'Por favor, escrever uma requisisao'\n      }\n    \n      return errors\n    \n    }\n\n  })\n  \n  return (\n   <form onSubmit={(e) => {\n     e.preventDefault()\n    //  const send = BackEnd.post('/crawl', {\n    //   keyword: forma.values\n    // })\n\n    // const res = BackEnd.get(`/crawl/${id}`, {\n    //   id: this.id\n    // })\n\n    // console.log(forma.values)\n\n    const send = BackEnd.post('/crawl', async (req, res) => {\n        const newKeyword = await keywords.create({\n          keyword: forma.values\n          })\n          res.json(newKeyword)\n      }) \n\n      // const ans = BackEnd.get(`/crawl/${id}`, async (req, res) => {\n      //   const keywordId = req.params.id\n      //   const newKeywordId = await keywords.create({\n      //     id: keywordId\n      //   })\n      //   res.json({ newKeywordId })\n      // })\n  }}>\n\n     <div>\n       <input\n        type=\"text\"\n        placeholder=\"Requisisao\"\n        name=\"keyword\"\n        id=\"keyword\"\n        onChange={forma.handleChange}\n        value={forma.values.keyword}\n        />\n        <br/>\t\n        {forma.errors.keyword && <span className=\"formaField_error\">{forma.errors.keyword}</span>}\n      </div>\n      <button type=\"submit\">\n        Cadastrar\n      </button>\n              <div onChange={forma.handleChange}>\n                <p>\n                    keyword: { forma.values.keyword }\n                </p>\n                <p>\n                    Status:\n                </p>\n                <p>\n                    Id:\n                </p>\n                \n            </div>\n    </form>\n  )\n}\n\nexport default App;\n","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\components\\RegedForma.jsx",["43"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\nfunction RegForm({\r\n  initialValues,\r\n  validate\r\n}) {\r\n  const [errors, setErrors] = useState({})\r\n  const [values, setValues] = useState(initialValues)\r\n\r\n  useEffect(() => {\r\n    validateValues(values)\r\n  }, [values])\r\n\r\n  function handleChange(e) {\r\n    const fieldName = e.target.getAttribute('name')\r\n    const value = e.target.value\r\n    setValues({\r\n      ...values,\r\n      [fieldName]: value,\r\n    })\r\n  }\r\n\r\n  function validateValues(values) {\r\n    setErrors(validate(values))\r\n  }\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    setErrors,\r\n    handleChange\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  const forma = RegForm({\r\n    initialValues: {\r\n     req: ''\r\n    },\r\n\r\n    validate: function (values) {\r\n      const errors = {};\r\n\r\n      if(values.req.length < 1) {\r\n        errors.req = 'Por favor, escrever um Id'\r\n      }\r\n    \r\n      return errors\r\n    \r\n    }\r\n\r\n  })\r\n  \r\n  return (\r\n   <form onSubmit={(e) => {\r\n     e.preventDefault()\r\n    \r\n   }}>\r\n     <div>\r\n       <input\r\n        type=\"text\"\r\n        placeholder=\"Id\"\r\n        name=\"req\"\r\n        id=\"req\"\r\n        onChange={forma.handleChange}\r\n        value={forma.values.req}\r\n        />\r\n        <br/>\t\r\n        {forma.errors.req && <span className=\"formaField_error\">{forma.errors.req}</span>}\r\n      </div>\r\n      <button type=\"submit\">\r\n        Cadastrar\r\n      </button>\r\n              <div onChange={forma.handleChange}>\r\n                <p>\r\n                    Id: { forma.values.req }\r\n                </p>\r\n                <p>\r\n                    Req Status:\r\n                </p>\r\n                <p>\r\n                    Status:\r\n                </p>\r\n                <p>\r\n                    URLs:\r\n                </p>\r\n                \r\n            </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","E:\\Jesus\\DEV\\Primeira vaga\\fundamentos\\src\\DB\\models\\keyword.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":12,"endColumn":11},{"ruleId":"53","severity":1,"message":"54","line":20,"column":6,"nodeType":"55","endLine":20,"endColumn":14,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":84,"column":11,"nodeType":"59","messageId":"60","endLine":84,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":13,"column":6,"nodeType":"55","endLine":13,"endColumn":14,"suggestions":"61"},{"ruleId":"46","replacedBy":"62"},{"ruleId":"48","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateValues'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'send' is assigned a value but never used.","Identifier","unusedVar",["67"],["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},{"desc":"68","fix":"70"},"Update the dependencies array to be: [validateValues, values]",{"range":"71","text":"72"},{"range":"73","text":"72"},[589,597],"[validateValues, values]",[267,275]]